---
title: "Segmentación de universidades en EEUU con énfasis en estudiantes de areas relacionadas a la computación"
author:
  - name: Daniel Daza Macias
    email: dadazam@unal.edu.co
  - name: Daniel Santiago Cadavid Montoya
    email: dcadavid@unal.edu.co
  - name: Jose Daniel Bustamante Arango
    email: jobustamantea@unal.edu.co
  - name: Marlon Calle Areiza
    email: mcallea@unal.edu.co
  - name: Ronald Gabriel Palencia
    email: ropalencia@unal.edu.co
format:
  html:
    code-fold: true
jupyter: python3
echo: false
theme:
          light: flatly
          dark: darkly
toc: true
---

## Introducción

El siguiente trabajo tiene como objetivo ofrecer información sobre segmentos de universidades a estudiantes que estén interesados como en bachelors degrees en computación, ingeniería, ingeniería y tecnología o matemáticas.

Para realizar la segmentación utilizamos la base de datos encontrada en el link: https://data.world/exercises/cluster-analysis-exercise-2

## Importe y análisis de datos

A continuación procedemos a hacer el cargo de datos considerando aquellos suprimidos por privacidad como NaN: 

```{python}
#| label: tbl-import-presentacion-inicial
#| tbl-cap: Datos iniciales

import numpy as np
import pandas as pd
import seaborn as sb
from tabulate import tabulate 
import matplotlib.pyplot as plt
from sklearn import preprocessing
from sklearn.cluster import KMeans
from sklearn.metrics import silhouette_score
from sklearn.metrics import pairwise_distances_argmin_min
from sklearn.cluster import AgglomerativeClustering
from scipy.cluster.hierarchy import dendrogram, ward

#TODO: Explicar valores Nan
#TODO: Revisar el tema de la low_memory=False
datos_raw = pd.read_csv('CollegeScorecard.csv', na_values='PrivacySuppressed',low_memory=False)

datos_raw.head(5)
```

Como se puede ver en @tbl-import-presentacion-inicial la base de datos contiene 1725 columnas además de 7804 observaciones.

Para comenzar y como nuestro interés de acuerdo al objetivo es tener la mayor cantidad de datos sin imputar relacionados a nuestro objetivo procederemos a seleccionar y estudiar las columnas cuyo porcentaje de nulos sea menor al (30%)

```{python}

def verificar_variables(nombre_archivo):
  path = f'/content/gdrive/Shareddrives/TAE/{nombre_archivo}'
  variable = pd.read_csv(path)
  nombre_ingresos = list(variable['variable_name'])
  df.loc[:, nombre_ingresos].info(verbose=True, show_counts=True)

def utiles_por_porcentaje(df, columnas, porcentaje):
  new_df = df[columnas]
  total = len(new_df)
  datos = {'columna': [], 'porcentaje_datos_nulos': [], 'datos_nulos': []}
  for col in new_df.columns:
    nulos = new_df[col].isna().sum()
    datos['columna'].append(col)
    datos['porcentaje_datos_nulos'].append(nulos/total)
    datos['datos_nulos'].append(f'{nulos} de {total}')
  nulos_columnas = pd.DataFrame(datos)
  mayor_02 = nulos_columnas['porcentaje_datos_nulos'] <= porcentaje
  utiles = nulos_columnas[mayor_02].sort_values(by='porcentaje_datos_nulos')
  return utiles

utiles_por_porcentaje(df=datos_raw, columnas=datos_raw.columns, porcentaje=0.3)

```

De acuerdo a un análisis manual y dado el objetivo planteado inicialmente se concluye que de las 351 variables resultantes las más adecuadas, en un principio, para ofrecer un producto son las presentados en @tbl-col-iniciales donde para el caso de las variables terminadas en "BACHL" TODO: Como es la vuelta de estas variables

```{python}
#| label: tbl-col-iniciales
#| tbl-cap: Columnas iniciales a analizar


def_var_dict={

"CURROPER":"Esta variable explica si la universidad se encuentra operando. Tiene 2 valores (1) si la universidad está operando o (2) si no está operando",

"CONTROL":"Tipo de institución; pública(0), privada sin ánimo de lucro(1) o privada con ánimo de lucro(2)",

"DEBT_MDN":"Se trata de la deuda mediana de préstamos acumulada en la institución por todos los estudiantes prestatarios de préstamos federales que se separan (es decir, se gradúan o se retiran) en un año fiscal determinado, medida en el punto de separación (DEBT_MDN)",

"PCTFLOAN":"Proporción de estudiantes universitarios que recibieron préstamos federales en un año determinado",

"GRAD_DEBT_MDN":"Deuda para los estudiantes que completaron sus estudios universitarios",

"PCTPELL":"Esta variable es el porcentaje de estudiantes los cuales recibieron Pell Grants, el cual es una beca federal que reciben los estudiantes de ingresos bajos",

"PCIP11":"Porcentaje de titulos otorgados en el campo de la computación",

"PCIP15":"Porcentaje de titulos otorgados en el campo de la  ingeniería",

"PCIP14":"Porcentaje de titulos otorgados en el campo de la  ingeniería y tecnología",

"PCIP27":"Porcentaje de titulos en otorgados en el campo de la  matemáticas",


"CIP11BACHL":"Identifíca si se el ofrece un bacheloor degree en computación y en que modalidad",

"CIP15BACHL":"Identifíca si se el ofrece un bacheloor degree en ingeniería y en que modalidad",

"CIP14BACHL":"Identifíca si se el ofrece un bacheloor degree en ingeniería y tecnología, y en que modalidad",

"CIP27BACHL":"Identifíca si se el ofrece un bacheloor degree en matemáticas, y en que modalidad"

}



from IPython.display import Markdown
from tabulate import tabulate
#TODO: Solucionar type de datos
interes=['CURROPER', 'CONTROL', 'DEBT_MDN', 'PCTFLOAN', 'GRAD_DEBT_MDN',
 'PCIP11', 'PCIP15', 'PCIP14', 'PCIP27', 'CIP11BACHL', 'CIP15BACHL',
 'CIP14BACHL', 'CIP27BACHL', 'PCTPELL']
table = [[interes[0],datos_raw[interes[0]].dtype,def_var_dict[interes[0]]],
         [interes[1],datos_raw[interes[1]].dtype,def_var_dict[interes[1]]],
         [interes[2],datos_raw[interes[2]].dtype,def_var_dict[interes[2]]],
         [interes[3],datos_raw[interes[3]].dtype,def_var_dict[interes[3]]],
         [interes[4],datos_raw[interes[4]].dtype,def_var_dict[interes[4]]],
         [interes[5],datos_raw[interes[5]].dtype,def_var_dict[interes[5]]],
         [interes[6],datos_raw[interes[6]].dtype,def_var_dict[interes[6]]],
         [interes[7],datos_raw[interes[7]].dtype,def_var_dict[interes[7]]],
         [interes[8],datos_raw[interes[8]].dtype,def_var_dict[interes[8]]],
         [interes[9],datos_raw[interes[9]].dtype,def_var_dict[interes[9]]],
         [interes[10],datos_raw[interes[10]].dtype,def_var_dict[interes[10]]],
         [interes[11],datos_raw[interes[11]].dtype,def_var_dict[interes[11]]],
         [interes[12],datos_raw[interes[12]].dtype,def_var_dict[interes[12]]],
         [interes[13],datos_raw[interes[13]].dtype,def_var_dict[interes[13]]],
         ]
Markdown(tabulate(
  table, 
  headers=["Nombre","Tipo de dato", "Resumen"]
))
```

En cuanto al manejo de nulos resultantes como se puede ver en @tbl-col-iniciales-datos-perdidas la mayor perdida de datos se debe a las variables DEBT_MDN y GRAD_DEBT_MDN, que tienen entre un 14% y un 16% de datos nulos en comparación con los datos generales.


```{python}
#| label: tbl-col-iniciales-datos-perdidas
#| tbl-cap: Datos perdidos

columnas_categoricas=['CURROPER', 'CONTROL','CIP11BACHL', 'CIP15BACHL',
 'CIP14BACHL', 'CIP27BACHL']
columnas_numericas=['DEBT_MDN', 'PCTFLOAN', 'GRAD_DEBT_MDN',
 'PCIP11', 'PCIP15', 'PCIP14', 'PCIP27','PCTPELL']

col_interes_NaN_analisis_all=utiles_por_porcentaje(df=datos_raw, columnas=interes, porcentaje=0.3)

col_interes_NaN_analisis_interes=utiles_por_porcentaje(df=datos_raw[interes].dropna(subset=["PCTPELL"]), columnas=interes, porcentaje=0.3)

col_interes_NaN_analisis_interes

colA=list(col_interes_NaN_analisis_all["porcentaje_datos_nulos"])
colB=list(col_interes_NaN_analisis_interes["porcentaje_datos_nulos"])
table1=list()

for i in range(14):
  if interes[i] in columnas_categoricas:
    table1.append([interes[i],"Variable categorica",colA[i]])
  else:
    table1.append([interes[i],"Variable numerica",colA[i]])

"""Markdown(tabulate(
  table1, 
  headers=["Variable","Tipo de variable", "% NaN"]
))"""

utiles_por_porcentaje(datos_raw,interes,0.3)
```

Por lo que se procede con una imputación reemplazando con la mediana y la moda los valores nulos en columnas numéricas y categóricas respectivamente,  lo que nos deja con un conjunto de datos de 7804 observaciones y 14 columnas.

Además de ello se procederá a hacer un One Hot Encoding a aquellas variables numéricas.

### Análisis inicial de datos

Comenzaremos con @fig-elephant donde se observan las densidades discriminadas por tipo de universidad (CONTROL). Para la variable deuda media acumulada se visualiza que la variabilidad de la deuda para los estudiantes de universidades privadas sin animo es mas elevada, a comparación de la publicas y privadas con animo de lucro,  ademas la media de las universidades sin ánimo de lucro es mas elevada. En la variable  que representa la proporción de estudiantes universitarios que recibieron préstamos federales en un año determinado (PCTFLOAN) se que la distribución de los datos para los estidudiantes de universidades privadas, independientemente si son de ánimo de lucro o no tienen el mismo comportamiento, a comparación de los que pertecen a la institución pública. Por otro lado; para la variable que tiene el porcentaje de estudiantes que recivierón la beca PELL  tienen distribuciones similares los que pertenecen a universidades privadas y públicas sin ánimo de lucro, por otro lado; las privadas con ánimo de lucro son las que tienen en promedio mayor porcentajes de becas y también una mayor dispersión.

![Analisis de densidad](densidad1.png){#fig-elephant}

Podemos notar en la matriz de correlación @fig-matriz-corr-1 que la deuda media acumulada de todos los estudiantes (DEBT_MDN) y la deuda media acumulada de los estudiantes que terminaron la carrera (GRAD_DEBT_MDN) presenta una correlación de 0.77, por lo que procedera a sacar una de ellas (GRAD_DEBT_MDN) para eliminar redundancia del conjunto de caracteristicas con las que se estan trabajando en el proceso de clusterización. También se logra observar unas correlaciones moderadas en otros pares de variables, son embargo se tomo la decisión de dejarlar, dado que son variables que contienen información inportante en el proceso de clusterización.


```{python}
#| label: fig-matriz-corr-1
#| fig-cap: "Matriz de correlacion"

datos_raw_interes=datos_raw[interes]
columnas_categoricas=['CURROPER', 'CONTROL','CIP11BACHL', 'CIP15BACHL',
 'CIP14BACHL', 'CIP27BACHL']
columnas_numericas=['DEBT_MDN', 'PCTFLOAN', 'GRAD_DEBT_MDN',
 'PCIP11', 'PCIP15', 'PCIP14', 'PCIP27','PCTPELL']

"""
datos_interes_imputados=datos_raw_interes.copy()
datos_interes_imputados[columnas_numericas] = datos_raw_interes[columnas_numericas].fillna(datos_raw_interes[columnas_numericas].median())

for col in columnas_categoricas:
  datos_interes_imputados[col] = datos_raw_interes[col].fillna(datos_raw_interes[col].mode()[0])
"""

datos_interes_imputados = pd.read_csv('sinNulos.csv',low_memory=False)


corrMatrix=datos_interes_imputados[columnas_numericas].corr()
sb.heatmap(corrMatrix, annot=True)
#plt.rcParams["figure.figsize"] = (25,25)
plt.show()
```

### Trato de outliers

Es importante notar que para una de las variables más importantes, DEBT_MDN, existen algunos valores que para nuestro estudio se considerarán outliers como se puede ver en @tbl-outliers-1, pues no están en nuestro interés, facilitando además la segmentación de los datos restantes:

```{python}
#| label: tbl-outliers-1
#| tbl-cap: Analisis de Outliers

from scipy import stats

anal_outliers=datos_interes_imputados.copy()
anal_outliers["Z_Score"]=np.abs(stats.zscore(anal_outliers["DEBT_MDN"]))
outliers=anal_outliers[anal_outliers["DEBT_MDN"]>=120000]

outliers[["DEBT_MDN","Z_Score"]]
```


### Analisis Principal de Componentes

Ahora se procederá a hacer un análisis de componentes principales sobre el dataset con variables categóricas encodeadas y variables numéricas normalizadas con min-max.

```{python}
#| label: tbl-princ-component-1
#| tbl-cap: Analisis de Componentes Principales




#TODO: MIRAR ESTO
data=datos_interes_imputados.copy()
"""
data["Z_CT"]=np.abs(stats.zscore(data["DEBT_MDN"]))
data=data[data["Z_CT"]<=3]

data=data.drop("Z_CT",axis=1)
"""
data=data[data["DEBT_MDN"]<120000]
#Sacando GRAD_DEBT_MDN
imputados_OneHot=data.copy()

columnas_numericas.remove("GRAD_DEBT_MDN")
imputados_OneHot = imputados_OneHot.drop("GRAD_DEBT_MDN", axis=1)


#Dummies de variables categoricas
dummy_cols = ['CIP11BACHL', 'CIP15BACHL', 'CIP14BACHL', 'CIP27BACHL', 'CONTROL']

for col in dummy_cols:
  one_hot = pd.get_dummies(imputados_OneHot[col], prefix=col)
  imputados_OneHot = imputados_OneHot.drop(col, axis=1)
  imputados_OneHot = imputados_OneHot.join(one_hot)

#Estandarización de las variables numericas
imputados_OneHot[columnas_numericas]=(imputados_OneHot[columnas_numericas] - imputados_OneHot[columnas_numericas].min())/(imputados_OneHot[columnas_numericas].max()-imputados_OneHot[columnas_numericas].min())


#Se procede a realizar el PCA

from sklearn.decomposition import PCA


pca = PCA()
pca.fit(imputados_OneHot)


table2=list()
acc_var_sum=0
contador=1
for i in pca.explained_variance_ratio_:
  if acc_var_sum<0.95:
    acc_var_sum+=i
    table2.append(["Componente "+str(contador),i,acc_var_sum])
    contador+=1
  else:
    break

Markdown(tabulate(
  table2, 
  headers=["Num. Componente","Varianza explicada", "Varianza acomulada"]
))
#dfilo = pd.DataFrame(table2, columns=["# Compenente","Varianza explicada", "Varianza acomulada"])
#table2
```

Como se puede ver en @tbl-princ-component-1 poco más del 95% de la varianza comienza a ser explicada al tener 9 de las componentes principales por lo que se considera no hay una suficiente diferencia entre uso de variables para usar PCA, por lo que se continuará con el desarrollo del modelo con las 13 columnas escogidas.

## Desarrollo del modelo

### Cantidad de clusters

Para proceder con el desarrollo del modelo se comenzará escogiendo la cantidad de clusters o grupos en los que se segmentarán los datos. Para ello se hará un análisis de Elbow Curve:

```{python}
#| label: fig-elbow-1
#| fig-cap: Analisis de Elbow curve

def elbow_curve(data, maxClusters = 15):

  # rango de valores del parámetro a optimizar (cantidad de clusters)
  maxClusters = range(1, maxClusters + 1)
  inertias = []

  # se ejecuta el modelo para el rango de clusters y se guarda la inercia
  # respectiva obtenida para cada valor
  for k in maxClusters:
    kmeanModel = KMeans(n_clusters = k)
    kmeanModel.fit(data)
    inertias.append(kmeanModel.inertia_)
  
# Grafico de los resultados obtenidos para cada valor del rango
  #print("Valores: ",inertias)
  plt.figure(figsize=(10, 8))
  plt.plot(maxClusters, inertias, 'bx-')
  plt.xlabel('k')
  plt.ylabel('Inercia')
  plt.title('Analisis de Elbow Curve para el óptimo k')
  plt.show()

elbow_curve(np.array(imputados_OneHot))
```

En @fig-elbow-1 se puede notar que la pendiente de inercia de un cluster a otro comienza a ser menor desde que hay 6 cluster por lo que se concluye esta como la cantidad ideal.

Por otra parte en @fig-dendrogram-1 se puede notar la agrupación en 6 grupos a través de agrupación aglomerativa con distancia ward en un dendrograma

```{python}
#| label: fig-dendrogram-1
#| fig-cap: Analisis de Dendrograma

import scipy.cluster.hierarchy as shc
from matplotlib import pyplot

pyplot.figure(figsize=(15, 7))  
pyplot.title("Dendrograma") 
dend = shc.dendrogram(shc.linkage(imputados_OneHot, method='ward'),truncate_mode="lastp")# Dendrograma usando ward como método de linkage.
ax = plt.gca()
bounds = ax.get_xbound()
ax.plot(bounds, [35, 35], '--', c='k')
ax.text(bounds[1], 35, ' Seis grupos', va='center', fontdict={'size': 15})
plt.xlabel("Cantidad de samples <(n)>, índice <i>")
plt.ylabel("Distancias de grupos")
plt.show()

```

### Entrenamiento del modelo

Ahora que tenemos la cantidad de clusters seleccionada se procederá a entrenar el modelo. 

Entrenado el modelo en @fig-kmeans-1 se podrán notar las observaciones en un plano tridimensional donde se comparan las variables "DEBT_MDN", "PCTFLOAN" y "PCTPELL" de cada observación y donde el color representa el cluster al que pertenece cada observación.

```{python}
#| label: fig-kmeans-1
#| fig-cap: Observaciones en 3 dimensiones de los clusters


from sklearn.cluster import KMeans


kmeans = KMeans(n_clusters=6,).fit(imputados_OneHot)
final=data.copy()
final["Clusters"]=kmeans.labels_


clustering= AgglomerativeClustering(n_clusters=5,linkage="ward")
clustering.fit(imputados_OneHot)
final["clusters"]=clustering.labels_

#Se exporta resultados
final.to_csv('base1.csv', index=False)

import plotly.express as px
import plotly.graph_objects as go

fig = px.scatter_3d(final, x="DEBT_MDN", y="PCTFLOAN", z="PCTPELL",color="Clusters",size_max=0.001)
fig.show()
```

## Analisis de resultados

Generada la base de datos con los resultados se comienza a hacer el análisis sobre ella. Es de importancia hacer notar que dado el funcionamiento de renderizado de quarto es necesario exportar los resultados generados y usarlos para mantener una constancia en los análisis sin tener problemas por la generación aleatoria de los modelos.

### Analisis generales

En el gráfico @fig-bachl-1 se muestran las diferencias con respecto a las carreras (11: Computación, 14: Ingeniería, 15: Ingeniería y tecnología, 27: Matemáticas) brindadas por modalidad (0: No se oferta, 1: Presencial, 2: Virtual) para cada tipo de universidad obtenido con lo realizado previamente.

Entre las cosas a notar encontramos:
*   Una similaridad en los grupos de universidades 0, 2 y 5 dado que la mayoría de las universidades que los conforman no brindan ninguno de los 4 tipos de campos.
*   Notamos una similaridad en los grupos 3 y 4 dado que tienen aproximadamente 300 universidades que no ofertan pregrado de inegeniería e ingeniería y tecnología.
*   Una gran mayoría de las universidades que brindan las diferentes carreras en la modalidad virtual se encuentran en el grupo 3.
*   La gran mayoría de universidades que ofrecen computación e ingeniería y tecnología de forma presencial se encuentran en el cluster 1
*   En el cluster 4 es el grupo en donde se encuentran ofertadas todas las carreras de interés en modalidad presencial.

![Analisis de carreras ofrecidas y modalidad](analisis1BACHL.png){#fig-bachl-1}

Por otra parte en @fig-cont-1 se muestran las diferentes variables continuas (deuda media, deuda media de graduados, procentaje de estudiantes que recibieron préstamo federal y porcentaje de estudiantes con beca Pell Grants) contra cada uno de los clusters, donde se puede notar que:

*   Los clusters 3 y 4 es donde hay un mayor cantidad de universidades cuyos estudiantes tienen una deuda de endeudamiento media alto, con respecto a los estudiantes de las otros grupos de universidades. Por otro lado, los clusters 0 y 2 contienen a las universidades cuyos estudiantes tienen menor deuda media.
*   El cluster 0 es en el que las universidades tienen un porcentaje medio menor de estudiantes con préstamos federal con respecto a los otros clusters. Sin embargo, el porcentaje de estudiantes con préstamo federal es muy variable, ya que presenta una mayor dispersión. Para los otros clusters no se ve una diferencia visual significativa entre el procentaje de estudiantes con préstamo.
*   Los clusters 1 y 2 son los que contienen las universidades con mayor porcentaje de estudiantes con beca Pell Grants con respecto a los demás clusters.

![Analisis por cluster de variables continuas](analisis2Continuas.png){#fig-cont-1}

Además en @fig-control-1 se muestra  el porcentaje de cada tipo de universidad dentro de cada cluster. Siendo 1 universidad pública, 2 universidad privada sin ánimo de lucro y 3 universidad privada con ánimo de lucro. Se puede observar que:


*   El cluster 0 se compone únicamente de universidades públicas.
*   El cluster 1 se compone en su mayoría de universidades privadas con ánimo de lucro, sin embargo también contiene algunas sin ánimo de lucro y públicas en menor medida.
*   El cluster 2 se compone únicamente de universidades privadas con ánimo de lucro.
*   El cluster 3 tiene en su mayoría universidades públicas y privadas sin ánimo de lucro.
*   El cluster 4 tiene en mayor parte universidades universidades privadas sin ánimo de lucro y no tiene privadas con ánimo de lucro.
*   El cluster 5 se compone únicamente de universidades sin ánimo de lucro.

![Analisis por cluster de tipo de universidades](analisis3Control.png){#fig-control-1}

En @fig-graduados-1 se muestra el porcentaje de estudiantes graduados por carrera en cada universidad sólo considerando aquellas universidades que ofrecen los títulos. Donde PCIP11 corresponde a los títulos otorgados en el campo de la computación, PCIP14 en el campo de la ingeniería, PCIP15 en el campo de la ingeniería y tecnología y PCIP27 en el campo de las matemáticas.
De las gráficas se puede ver que:


*   El cluster 1 está compuesto por universidades con mayor porcentaje de titulos otorgados en los campos de computación e ingeniería y tecnología con respecto a los demas clusters.
*   En general las universidades con mas títulos otorgados en computación e ingeniería y tecnología se encuentran en los clusters 1, 2 y 5 en ese orden de mayor a menor.
*   El cluster 5 es donde, con gran diferencia, están las universidades ofertantes con mayor porcentaje de títulos en ingeniería otorgados.
*   Respecto al campo de las matemáticas es notable que todos los clusters tienen universidades con titulos otorgados en este campo, salvo el cluster 1 y siendo el cluster 2 el de mayor porcentaje de títulos entregados.

![Analisis por cluster de porcentaje de graduados sólo universidades que ofrecen](analisis3Graduados.png){#fig-graduados-1}

Por otra parte en @fig-graduados-2 se puede ver la comparación de porcentajes medios de graduados dada la carrera para cada cluster. Se puede notar:

*   El cluster 1 está compuesto por universidades con mayor porcentaje de títulos otorgados en los campos de computación e ingeniería y tecnología con respecto a los demas clusters.
*   Los clusters 3 y 4 están compuestos por universidades con mayor porcentaje medio de títulos otorgados con respecto a los demás clusters en el área de matemáticas, donde es casi nulo como es el caso del 2 que a pesar de tener mayor porcentaje entre universidades que ofrecen la carrera en general tiene un porcentaje muy bajo en relación con los otros.
*   Estos clusters (3 y 4) además, son quienes tienen mayor porcentaje de graduados medio en carreras relacionadas a la ingeniería (PCIP14) de manera general.

![Analisis por cluster de porcentaje de graduados medio](analisis5Graduados.png){#fig-graduados-2}

### Diferencias clusters no ofertantes 0, 2 y 5.

Comparando los clusters en @fig-graduados-3 de mayor similitud en los que la mayoría de universidades no ofertan las carreras de interés tenemos que, de las universidades que los ofertan se puede ver que:

*   En el campo de la computación es donde más títulos se otorgan en comparación a los otros campos.
*   El cluster 0 (en el menos se ofertan los campos de interés) es donde se presenta la mayor cantidad de graduados en los pregrados de computación e ingeniería y tecnología.
*   El cluster 2 es el de menor media de gradudados en matemáticas en comparación con el cluster 0 y 5.
*   El cluster 5 es donde se presenta menor cantidad de graduados en computación e ingeniería en comparación a los clusters 0 y 2.

![Analisis clusters 0, 2 y 5 de porcentaje de graduados medio](analisis6Graduados.png){#fig-graduados-3}

en @fig-dinero-1 se observan las diferencias visuales que tienen las variables: deuda media acumulada de los estudiates que terminaron la carrera (DEBT_MDN), deuda media acumulada de los estudiates que no terminaron la carrera (GRAN_DEBT_MDN), porcentaje de estudiantes que ganaron la beca PELL y tasa de endeudamiento de los estudiantes de la institución (PCTFLOAN).

En la parte superior derecha se visualiza una diferencia que existe entre el cluster 0 respecto al 2 y 3, para la tasa de endeudamiento, además, se puede notar que entre el cluster 1 y 2 no se evidencia una diferencia significativa visual, por lo que se asume que tienen caracteristicas muy similares.

Para la variable que representa el porcentaje  de estudiantes que ganarón la beca se ve una diferencia en cluster 2, respecto al 0 y el 5, ademas la dispersión de los datos en este grupo es muy baja, por lo que se concluye que es un grupo homogeneo.

![Analisis clusters 0, 2 y 5 de porcentaje de graduados medio](analisis7Money.png){#fig-dinero-1}

### Caracterización de los clusters

*   **Cluster 0:** Compuesto por universidades públicas, en donde está el menor porcentaje de estudiantes con un préstamo federal y por tanto la menor deuda media. Sin embargo es el cluster que contiene las universidades con menor oferta de las carreras de interés, por ende es donde menor cantidad de estudiantes graduados en dichos pregrados hay.
*   **Cluster 1:** Compuesto por universidades en su mayoría privadas con ánimo de lucros y poseen un mayor porcentaje de estudiantes tanto con préstamo federal como con beca Pell Grants, debido a esto sus estudiantes tienen una deuda media mayor que los clusters 0 y 2 y es el de mayor deuda media de sus estudiantes graduados (junto con los clusters 3 y 4). En este cluster es donde se encuentran las universidades con mas oferta presencial de los campos de computación e ingeniería y tecnología, además es donde mayor porcentaje de estudiantes graduados en computación, ingeniería y tecnología y matemáticas hay.
*   **Cluster 2:** Compuesto únicamente por universidades privadas con ánimo de lucro similar al cluster 0 contiene las universidas con menor oferta de las carreras y menor deuda media de sus estudiantes, pero tiene una mayor oferta que el cluster 0 de computación en la modalidad virtual. Tiene un porcentaje de estudiantes con préstamo federal muy similar a los clusters 3, 4 y 5 y es el segundo en cuanto a estudiantes con beca Pell Grants. Respecto a los graduados, es el de menor porcentaje de estos en las carreras salvo en computación y en ingeniería y tecnología que es el segundo mayor.
*   **Cluster 3:** Compuesto en su mayoría por universidades públicas y privadas sin ánimo de lucro las cuales no ofertan las carreras de forma presencial, únicamente virtual. A pesar de que tiene un porcentaje similar a los clusters 2, 4 y 5 de estudiantes con préstamos federales, es el cluster con universidades cuyos estudiantes tienen la segunda mayor deuda media esto quizá provocado porque también tiene el segundo menor porcentaje de estudiantes con beca Pell Grants. Sus universidades son las de menor porcentaje de graduados (junto con el cluster  4) salvo en mátemáticas que tiene el segundo mayor porcentaje de graduados en este campo.
*   **Cluster 4:** Compuesto únicamente por universidades públicas y privadas sin ánimo de lucro (siendo mayor la cantidad de éstas ultimas en el cluster) las cuales ofertan las carreras únicamente de forma presencial. Como en el cluster 3 tiene un porcentaje similar de estudiantes con préstamos federales a los clusters 2 y 5, pero es el cluster con universidades cuyos estudiantes tienen la mayor deuda media, ocasionado probablemente también porque es el de menor porcentaje de estudiantes con beca Pell Grants. Respecto al porcentaje de universidades graduados en sus universidades, ocurre aproximadamente lo mismo que en el cluster 3.
*   **Cluster 5:** Compuesto únicamente por universidades privadas sin ánimo de lucro, las universidades dentro de este grupo son similares en cuanto a su no oferta de las carreras como los clusters 0 y 2, sin embargo tienen un poco más de oferta en los campos de computación y matemáticas en las modalidades presencial y virtual que estos 2 clusters anteriormente mencionados. Su deuda media y porcentaje de estudiantes con préstamo federal son similares a los de cluster 1 y 4 respectivamente y es el tercero en cuanto a mayor media de porcentaje de estudiantes con becas Pell Grants. Destaca en que es el cluaster con mayor porcentaje de graduados en ingeniería y en general es el tercero con mayor porcentaje de estudiantes graduados para las demás carreras.

## Concluciones

*   A quienes estén interesados en las carreras de computación, ingeniería, ingeniería y tecnología, y matemáticas se les recomienda poner especial atención a las clusters 1, 3 y 4, siendo 1 y 4 recomendados si la persona prefiere una educación presencial y el 3 si prefiere una educación virtual.
*   Si se está interesado en obtener una beca Pell Grant poner atención a las universidades del cluster 1 y 2, que tienen mayor porcentaje medio de estudiantes con esta beca.
*   Si el estudiante no está interesado en tener una deuda muy grande se recomiendan las universidades agrupadas en los clusters 0 y 2, pero se debe tener en cuenta que estos a su vez contienen pocas universidades ofertantes de los campos de interés.
*   Si el estudiante está interesado en universidades privadas debería prestar especial atención a aquellas contenidas en los clusters 2 y 5. En caso de que estuviera interesado en universidades públicas debería prestar especial atención a aquellas contenidas en el cluster 0 y en el cluster 3.
*   Dado el porcentaje medio de graduados sobre todas las universidades, si el estudiante está interesado en un pregrado de matemáticas debería prestar atención a aquellas universidades contenidas en los clusters 3 y 4. De igual manera si está interasado en el campo de la computación o la ingeniería y tecnología se recomienda prestar especial atención a aquellas universidades contenidas en el cluster 1. Similarmente para el caso de ingeniería se recomienda prestar atención a aquellas universidades contenidas en el cluster 4.

## Clusterización para segmentación de Universidades Colombianas 

Colombia es un país donde la desigualdad de acceso a la educación  es un problema que ha venido creciendo. Teniendo en cuenta que la educación en una nación es una herramienta vital para su desarrollo en diferentes campos como el tecnológico, social, económico entre otros. Para acceder a los pocos trabajos altamente remunerados en el país, una persona debe tener la educación o las conexiones apropiadas y ambas cosas se adquieren en espacios de interacción específicos. En particular la inmensa mayoría de la educación y las conexiones que uno acumula antes de su entrada al mundo laboral se generan en los colegios y universidades a los que uno asiste. Sin embargo, no todos los colegios y universidades ofrecen la misma cantidad y calidad de educación y conexiones. Es por esto que se desarrollará un proyecto donde se clasificaron las diferentes universidades según sus características: calidad de los egresados, facilidad de ingreso, oportunidades de becas, modalidad, carreras ofertadas, entre otros factores.

El **objetivo general** de este proyecto es responder a preguntas que se generan en los padres de los estudiantes que buscan brindarles el acceso a la educación superior o de los mismos estudiantes.

### Objetivos específicos

Los objetivos específicos son:

*   Encontrar las tablas de datos necesarias para responder las preguntas planteadas anteriormente.
*   Categorizar las  diferentes universidades que tiene el país.
*   Generar un herramienta que ayudaría al ministerio de educación a identificar las desigualdades que existen en las universidades del país.

### Base de datos

Las tablas necesarias para el desarrollo de este proyecto son:

*   La base de datos que contienen los resultados de las pruebas saber Pro
*   La base de datos que genera el Shanghai Ranking.
*   Una base de datos que contiene la siguiente información: Carreras ofertadas, tipo de institución, relaciones internacionales, entre otras.

### Metodología

Para el desarrollo de este proyecto los siguientes pasos:

1)	Comprensión del problema de desigualdad de educación superior que tiene el país.
2)	Recolección de los datos y entendimiento de cada una de sus columnas.
1)	Exploración, depuración y análisis descriptivo de la tablas
2)	Planteamiento de los diferentes cluster según las características similares que presentan las universidades.
3)	Análisis de los resultados obtenidos en el paso anterior.
4)	Conclusiones y recomendaciones.
